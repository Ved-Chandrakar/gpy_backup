const { DataTypes } = require('sequelize');

/**
 * Migration to add additional fields to mother registration
 * - birth_certificate: "Kya birth certificate mila?" (Yes/No)
 * - is_shramik_card: "Kya shramik card bana hua hai?" (Yes/No)
 * - is_used_ayushman_card: "Kya is delivery ke liye Ayushman card ka prayog hua?" (Yes/No)
 * - ayushman_card_amount: "Agar haan, toh kitna amount tak ka hua?" (number)
 * - is_benefit_nsy: "Kya vo Nauni Suraksha Yojna ke antargat aati hai?" (for female child)
 * - is_nsy_form: "Aur agar haan, toh form mila hai?" (for female child)
 */

module.exports = {
  async up(queryInterface, Sequelize) {
    console.log('üöÄ Adding additional mother registration fields to tbl_child...');
    
    try {
      // Add birth_certificate field
      await queryInterface.addColumn('tbl_child', 'birth_certificate', {
        type: DataTypes.ENUM('yes', 'no'),
        allowNull: true,
        comment: '‡§ï‡•ç‡§Ø‡§æ birth certificate ‡§Æ‡§ø‡§≤‡§æ? (‡§π‡§æ‡§Ç/‡§®‡§π‡•Ä‡§Ç)'
      });
      console.log('‚úÖ Added birth_certificate column');

      // Add is_shramik_card field
      await queryInterface.addColumn('tbl_child', 'is_shramik_card', {
        type: DataTypes.ENUM('yes', 'no'),
        allowNull: true,
        comment: '‡§ï‡•ç‡§Ø‡§æ ‡§∂‡•ç‡§∞‡§Æ‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§° ‡§¨‡§®‡§æ ‡§π‡•Å‡§Ü ‡§π‡•à? (‡§π‡§æ‡§Ç/‡§®‡§π‡•Ä‡§Ç)'
      });
      console.log('‚úÖ Added is_shramik_card column');

      // Add is_used_ayushman_card field
      await queryInterface.addColumn('tbl_child', 'is_used_ayushman_card', {
        type: DataTypes.ENUM('yes', 'no'),
        allowNull: true,
        comment: '‡§ï‡•ç‡§Ø‡§æ ‡§á‡§∏ delivery ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§Ø‡•Å‡§∑‡•ç‡§Æ‡§æ‡§® ‡§ï‡§æ‡§∞‡•ç‡§° ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•Å‡§Ü? (‡§π‡§æ‡§Ç/‡§®‡§π‡•Ä‡§Ç)'
      });
      console.log('‚úÖ Added is_used_ayushman_card column');

      // Add ayushman_card_amount field
      await queryInterface.addColumn('tbl_child', 'ayushman_card_amount', {
        type: DataTypes.DECIMAL(10, 2),
        allowNull: true,
        comment: '‡§Ü‡§Ø‡•Å‡§∑‡•ç‡§Æ‡§æ‡§® ‡§ï‡§æ‡§∞‡•ç‡§° ‡§ï‡•Ä ‡§∞‡§æ‡§∂‡§ø (‡§Ø‡§¶‡§ø ‡§â‡§™‡§Ø‡•ã‡§ó ‡§π‡•Å‡§Ü ‡§π‡•ã)'
      });
      console.log('‚úÖ Added ayushman_card_amount column');

      // Add is_benefit_nsy field (for female children)
      await queryInterface.addColumn('tbl_child', 'is_benefit_nsy', {
        type: DataTypes.ENUM('yes', 'no'),
        allowNull: true,
        comment: '‡§ï‡•ç‡§Ø‡§æ ‡§µ‡•ã ‡§®‡§®‡•ç‡§®‡•Ä ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§ó‡§§ ‡§Ü‡§§‡•Ä ‡§π‡•à? (‡§ï‡•á‡§µ‡§≤ ‡§¨‡§æ‡§≤‡§ø‡§ï‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è)'
      });
      console.log('‚úÖ Added is_benefit_nsy column');

      // Add is_nsy_form field (for female children)
      await queryInterface.addColumn('tbl_child', 'is_nsy_form', {
        type: DataTypes.ENUM('yes', 'no'),
        allowNull: true,
        comment: 'NSY ‡§´‡•â‡§∞‡•ç‡§Æ ‡§Æ‡§ø‡§≤‡§æ ‡§π‡•à? (‡§ï‡•á‡§µ‡§≤ ‡§¨‡§æ‡§≤‡§ø‡§ï‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è)'
      });
      console.log('‚úÖ Added is_nsy_form column');

      console.log('üéâ Successfully added all additional mother registration fields to tbl_child');
      
    } catch (error) {
      console.error('‚ùå Error adding additional mother registration fields:', error);
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    console.log('üîÑ Removing additional mother registration fields from tbl_child...');
    
    try {
      await queryInterface.removeColumn('tbl_child', 'birth_certificate');
      console.log('‚úÖ Removed birth_certificate column');

      await queryInterface.removeColumn('tbl_child', 'is_shramik_card');
      console.log('‚úÖ Removed is_shramik_card column');

      await queryInterface.removeColumn('tbl_child', 'is_used_ayushman_card');
      console.log('‚úÖ Removed is_used_ayushman_card column');

      await queryInterface.removeColumn('tbl_child', 'ayushman_card_amount');
      console.log('‚úÖ Removed ayushman_card_amount column');

      await queryInterface.removeColumn('tbl_child', 'is_benefit_nsy');
      console.log('‚úÖ Removed is_benefit_nsy column');

      await queryInterface.removeColumn('tbl_child', 'is_nsy_form');
      console.log('‚úÖ Removed is_nsy_form column');

      console.log('üéâ Successfully removed all additional mother registration fields from tbl_child');
      
    } catch (error) {
      console.error('‚ùå Error removing additional mother registration fields:', error);
      throw error;
    }
  }
};
